@model HazelClinic3.Models.RescheduleViewModel

@{
    ViewBag.Title = "Reschedule";
}

<h2 class="text-center">Reschedule your Pet Boarding Below :</h2>
<p></p>
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="container">
            <div class="row">
                <div class="col-md-6">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                            <div class="form-group">
                                @Html.LabelFor(model => model.BookingId, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.BookingId, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BookingId, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Fname, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Fname, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Fname, "", new { @class = "text-danger" })
                            </div>

                          
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="panel panel-default">
                        <div class="panel-body">
                            <div class="form-group">
                                @Html.LabelFor(model => model.StartDate, "Enter Current Start Date:", new { @class = "control-label required-label" })
                                @Html.TextBoxFor(model => model.StartDate, new { @class = "datepicker form-control", id = "start-date", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "field-validation-valid text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.EndDate, "Enter Current End Date:", new { @class = "control-label required-label" })
                                @Html.TextBoxFor(model => model.EndDate, new { @class = "datepicker form-control", id = "end-date", @readonly = "readonly" })
                                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "field-validation-valid text-danger" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <p></p>
        <p></p>
        <div class="row">
            <div class="col-md-12 text-center">
                <input type="submit" value="Submit" class="btn btn-primary" />
            </div>
        </div>

    }


    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <link href="~/Content/themes/base/jquery-ui.css" rel="stylesheet" />
        <script src="~/Scripts/jquery-ui-1.13.2.min.js"></script>


        <script>
            $(document).ready(function () {
                var startDatePicker = $("#start-date");
                var endDatePicker = $("#end-date");

                startDatePicker.datepicker({
                    changeMonth: true,
                    minDate: new Date(),
                    onSelect: function (selectedDate) {
                        endDatePicker.datepicker("option", "minDate", selectedDate);
                        endDatePicker.datepicker("option", "beforeShowDay", function (date) {
                            var start = startDatePicker.datepicker("getDate");
                            return [date.getTime() != start.getTime()];
                        });
                    }
                });

                endDatePicker.datepicker({
                    changeMonth: true,
                    minDate: new Date(),
                    onSelect: function (selectedDate) {
                    }
                });
            });





        </script>
    }

